package com.secreal.cari_movie.Dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.secreal.cari_movie.Dao.Movie;
import com.secreal.cari_movie.Dao.Rating;
import com.secreal.cari_movie.Dao.Favorite;
import com.secreal.cari_movie.Dao.Bookmark;
import com.secreal.cari_movie.Dao.User;
import com.secreal.cari_movie.Dao.Recent;

import com.secreal.cari_movie.Dao.MovieDao;
import com.secreal.cari_movie.Dao.RatingDao;
import com.secreal.cari_movie.Dao.FavoriteDao;
import com.secreal.cari_movie.Dao.BookmarkDao;
import com.secreal.cari_movie.Dao.UserDao;
import com.secreal.cari_movie.Dao.RecentDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig movieDaoConfig;
    private final DaoConfig ratingDaoConfig;
    private final DaoConfig favoriteDaoConfig;
    private final DaoConfig bookmarkDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig recentDaoConfig;

    private final MovieDao movieDao;
    private final RatingDao ratingDao;
    private final FavoriteDao favoriteDao;
    private final BookmarkDao bookmarkDao;
    private final UserDao userDao;
    private final RecentDao recentDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        movieDaoConfig = daoConfigMap.get(MovieDao.class).clone();
        movieDaoConfig.initIdentityScope(type);

        ratingDaoConfig = daoConfigMap.get(RatingDao.class).clone();
        ratingDaoConfig.initIdentityScope(type);

        favoriteDaoConfig = daoConfigMap.get(FavoriteDao.class).clone();
        favoriteDaoConfig.initIdentityScope(type);

        bookmarkDaoConfig = daoConfigMap.get(BookmarkDao.class).clone();
        bookmarkDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        recentDaoConfig = daoConfigMap.get(RecentDao.class).clone();
        recentDaoConfig.initIdentityScope(type);

        movieDao = new MovieDao(movieDaoConfig, this);
        ratingDao = new RatingDao(ratingDaoConfig, this);
        favoriteDao = new FavoriteDao(favoriteDaoConfig, this);
        bookmarkDao = new BookmarkDao(bookmarkDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        recentDao = new RecentDao(recentDaoConfig, this);

        registerDao(Movie.class, movieDao);
        registerDao(Rating.class, ratingDao);
        registerDao(Favorite.class, favoriteDao);
        registerDao(Bookmark.class, bookmarkDao);
        registerDao(User.class, userDao);
        registerDao(Recent.class, recentDao);
    }
    
    public void clear() {
        movieDaoConfig.getIdentityScope().clear();
        ratingDaoConfig.getIdentityScope().clear();
        favoriteDaoConfig.getIdentityScope().clear();
        bookmarkDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        recentDaoConfig.getIdentityScope().clear();
    }

    public MovieDao getMovieDao() {
        return movieDao;
    }

    public RatingDao getRatingDao() {
        return ratingDao;
    }

    public FavoriteDao getFavoriteDao() {
        return favoriteDao;
    }

    public BookmarkDao getBookmarkDao() {
        return bookmarkDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public RecentDao getRecentDao() {
        return recentDao;
    }

}
